<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pri.tangjiang.graduationdesign.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="pri.tangjiang.graduationdesign.bean.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modify_time" jdbcType="TIMESTAMP" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="department_id" property="department_id" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="admin" property="admin" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_time, modify_time, username, password, department_id, birthday, gender, 
    nickname, admin
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tj_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getByUsername" resultMap="BaseResultMap">
    SELECT
	    *
    FROM
	    tj_user
    WHERE
	    username = #{username}
  </select>
  <select id="getByUserId" resultType="pri.tangjiang.graduationdesign.bean.vo.UserVO">
    SELECT
    	u.id userId,
    	u.username username,
    	u.birthday birthday,
    IF
    	( u.gender = 0, '男', '女' ) gender,
    	u.nickname nickname,
    	u.admin admin,
    	d.id departmentId,
    	d.`name` departmentName,
    	d.description description
    FROM
    	tj_user u
    	LEFT JOIN tj_department d ON u.department_id = d.id
    WHERE
	    u.id = #{userId}
  </select>
  <select id="listAllUser" resultType="pri.tangjiang.graduationdesign.bean.vo.UserVO">
    SELECT
    	u.id userId,
    	u.username username,
    	u.birthday birthday,
    IF
    	( u.gender = 0, '男', '女' ) gender,
    	u.nickname nickname,
    	u.admin admin,
    	d.id departmentId,
    	d.`name` departmentName,
    	d.description description
    FROM
    	tj_user u
    	LEFT JOIN tj_department d ON u.department_id = d.id
    WHERE
        u.admin = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tj_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="pri.tangjiang.graduationdesign.bean.User" useGeneratedKeys="true" keyProperty="id" >
    insert into tj_user (create_time, modify_time, username, 
      password, department_id, birthday, 
      gender, nickname, admin
      )
    values (#{create_time,jdbcType=TIMESTAMP}, #{modify_time,jdbcType=TIMESTAMP}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{department_id,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, 
      #{gender,jdbcType=TINYINT}, #{nickname,jdbcType=VARCHAR}, #{admin,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="pri.tangjiang.graduationdesign.bean.User" useGeneratedKeys="true" keyProperty="id" >
    insert into tj_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="modify_time != null" >
        modify_time,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="department_id != null" >
        department_id,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="admin != null" >
        admin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="modify_time != null" >
        #{modify_time,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="department_id != null" >
        #{department_id,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="admin != null" >
        #{admin,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pri.tangjiang.graduationdesign.bean.User" >
    update tj_user
    <set >
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="modify_time != null" >
        modify_time = #{modify_time,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="department_id != null" >
        department_id = #{department_id,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="admin != null" >
        admin = #{admin,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="pri.tangjiang.graduationdesign.bean.User" >
    update tj_user
    set create_time = #{create_time,jdbcType=TIMESTAMP},
      modify_time = #{modify_time,jdbcType=TIMESTAMP},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      department_id = #{department_id,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      gender = #{gender,jdbcType=TINYINT},
      nickname = #{nickname,jdbcType=VARCHAR},
      admin = #{admin,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>